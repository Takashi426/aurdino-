// TRANSMITTING CODE HERE
//LINK OF GOOGLE IS HERE
//https://maker.pro/arduino/tutorial/creating-long-distance-serial-communication-using-an-arduino-and-an-rs-485-module
#define SerialTxControl 2 // contact # 2 will switch receiver / transmitter mode
#define RS485Transmit HIGH
#define RS485Receive LOW

//#########receiver

#define SerialTxControl_2 6
#define RS485Transmit HIGH
#define RS485Receive LOW

char buffer [100];
byte state = 0;

void setup (void) 
{
    Serial.begin (9600); // set the serial port to 9600baud speed
    pinMode (SerialTxControl, OUTPUT);
    digitalWrite (SerialTxControl, RS485Transmit); // put the device into transmitter mode
     Serial.print ("transmitter init completed\n");
    //receiver
    //#######
     Serial.begin (9600);
    pinMode (14, OUTPUT); 
    pinMode (SerialTxControl_2, OUTPUT); 
    digitalWrite (SerialTxControl, RS485Receive); // put the device into receiver mode
     //Serial.print ("receiver inint completed\n");

}
 
void loop (void) {
    Serial.print ("ping"); // send text
    delay (500);
    //###########
    //receiver
    int i = 0;
    if (Serial.available ()) {// if any data came to the port
        delay (5); // wait a bit for the entire data packet to be accepted by the port
        while (Serial.available ()) {
            buffer [i ++] = Serial.read (); // read data and write it to the buffer
        }
Serial.print ("data reading completed\n");        
    }
   // Serial.print ("data reading completed\n");
    if (i> 0) 
    {// if there is something in the buffer
        buffer [i ++] = '\ 0'; // convert the buffer contents to a string by adding a null character
        if (strcmp (buffer, "ping")) 
        {// if the accepted string is equal to the ping text
           digitalWrite (14, HIGH); // blink LED
            state =! state;
        }            
             Serial.print (buffer);
        }
       Serial.print (buffer);
    }

