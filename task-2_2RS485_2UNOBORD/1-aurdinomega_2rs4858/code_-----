// TRANSMITTING CODE HERE
//LINK OF GOOGLE IS HERE
//https://maker.pro/arduino/tutorial/creating-long-distance-serial-communication-using-an-arduino-and-an-rs-485-module




#define SerialTxControl_1 9// contact #  will switch receiver / transmitter mode
#define RS485Transmit HIGH //to undestand high
#define RS485Receive LOW // to undestand low
#define LED          13  //led pin number
//#########receiver

#define SerialTxControl_2 8// just enable pin

char buffer [100];
byte state = 0;

void setup (void) 
{
    Serial.begin (9600);//for serial port
    Serial1.begin (9600);//for seria; port 1
    Serial2.begin (9600); // for serial port 2
    pinMode(LED , OUTPUT); 
    pinMode (9,OUTPUT); // declare enable pin as output//seeting pin numbers as output
    pinMode (8,OUTPUT); // declare enable pin as output// DE,RE =HIGH //put the device into transmitter mode
     
    //receiver
    //#######
     
    //pinMode (14, OUTPUT); 
    digitalWrite (8, RS485Receive); 
    digitalWrite (9, RS485Receive); //RECEVING CONDIYION IS DE,RE=LOW// put the device into receiver mode
    

}
 
void loop (void) {
  digitalWrite (9, RS485Transmit); //to send data de,re==high
    delay(500); 
    Serial1.write ("cat");// send text
    //###########
    //receiver
    while(Serial2.available())                     // data is available so enter into while loop
  {
    if(Serial2.read() == "cat");                    //check avalaible data with cat
    {
      Serial.println("cat_ok");
      digitalWrite(LED , !digitalRead(LED));    // LED Blink
    }
  }
}
    





















////////////////////not completed code here is///////////////







/*
#define SerialTxControl 15 // contact #  will switch receiver / transmitter mode
#define RS485Transmit HIGH
#define RS485Receive LOW

//#########receiver

#define SerialTxControl_2 6 // selecting pin number is 6 as receiveer side
#define RS485Transmit HIGH
#define RS485Receive LOW

char buffer [100];
byte state = 0;

void setup (void) 
{
    Serial.begin (9600); // set the serial port to 9600baud speed at receiver side
    pinMode (SerialTxControl, OUTPUT); // seeting pin numbers as output
    digitalWrite (SerialTxControl, RS485Transmit); // transmitting condition is DE,RE =HIGH //put the device into transmitter mode
     Serial.print ("transmitter inint completed\n");
    //receiver
    //#######
     Serial.begin (9600);
    pinMode (14, OUTPUT); 
    pinMode (SerialTxControl_2, OUTPUT); 
    digitalWrite (SerialTxControl, RS485Receive); //RECEVING CONDIYION IS DE,RE=LOW// put the device into receiver mode
     Serial.print ("receiver inint completed\n");

}
 
void loop (void) {
   // Serial.print ("ping"); // send text
    delay (500);
    //###########
    //receiver
    int i = 0;
    int a;
    if (Serial.available ()) {// HAVE TO GIVE INPUT FROM PORT //if any data came to the port
     a=Serial.read();
    Serial.print (a);// It will read the incoming or arriving data byte  FOR MY CHECK
    Serial.print ("\n");
        delay (2000); // wait a bit for the entire data packet to be accepted by the port
        while (Serial.available ()) {
            buffer [i ++] = Serial.read (); // read data and write it to the buffer
            
        }
        Serial.print ("value stored in buffer is\n");
        Serial.print (buffer);
    }
   
    if (i> 0) 
    {// if there is something in the buffer
        buffer [i ++] = '\ 0'; // convert the buffer contents to a string by adding a null character
        if (strcmp (buffer, "ping")) //IF BOTH STRING SAME IT RETURN 0 IF FRIST STING STRIN > IT GIVE >0
        {// if the accepted string is equal to the ping text
           digitalWrite (14, HIGH); // blink LED
            state =! state;
             
        }  
        Serial.print ("strcmp done");          
             
        }
       //Serial.print ("receiving and transmitting is done with two rs485 and one aurdino"); 
    }
*/
